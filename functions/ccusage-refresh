#!/usr/bin/env zsh

# Manual refresh command for zsh-ccusage plugin
# Clears cache and forces immediate update of cost display

# Main refresh function
function ccusage-refresh() {
    echo "Refreshing ccusage data..."
    
    # Clear all cached data to force fresh fetch
    ccusage_cache_clear
    
    # Trigger immediate display update by calling the display function
    # This will fetch fresh data since cache is empty
    local result=$(ccusage_display)
    
    # Force prompt redraw to show updated data immediately
    # zle reset-prompt only works inside ZLE widgets, so we check if we're in one
    if [[ -n "$WIDGET" ]]; then
        zle reset-prompt
    else
        # If not in a ZLE widget, we need to print the result and suggest redraw
        echo "Current usage: $result"
        echo "Press Enter to refresh your prompt with new data."
    fi
    
    echo "âœ“ CCUsage data refreshed successfully"
}

# Register as a ZLE widget for better integration
# This allows the command to refresh the prompt immediately when called
zle -N ccusage-refresh

# Also make it available as a regular command
# This ensures it can be called from command line: $ ccusage-refresh
if [[ "${ZSH_EVAL_CONTEXT}" == "toplevel" && "$0" == *ccusage-refresh* ]]; then
    # Script is being executed directly
    # Source required dependencies
    local script_dir="${0:A:h}"
    local plugin_dir="${script_dir:h}"
    
    # Source dependencies if not already loaded
    if ! command -v ccusage_cache_clear &> /dev/null; then
        source "${plugin_dir}/lib/cache.zsh"
    fi
    if ! command -v ccusage_display &> /dev/null; then
        source "${plugin_dir}/zsh-ccusage.plugin.zsh"
    fi
    
    # Execute the refresh
    ccusage-refresh
fi