#!/usr/bin/env zsh

# Manual refresh command for zsh-ccusage plugin
# Clears cache and forces immediate update of cost display

# Clear all cost mode caches specifically
function ccusage_clear_all_cost_caches() {
    local today=$(date +%Y%m%d)
    local current_month=$(date +%Y%m)
    
    # Clear all cost mode caches
    ccusage_cache_clear "cost_active"
    ccusage_cache_clear "cost_daily_${today}"
    ccusage_cache_clear "cost_monthly_${current_month}"
    
    # Clear percentage-related caches
    ccusage_cache_clear "block_cost"
    ccusage_cache_clear "daily_usage_${today}"
    ccusage_cache_clear "monthly_total_${current_month}"
}

# Main refresh function
function ccusage-refresh() {
    echo "Refreshing all ccusage cost modes..."
    
    # Ensure async system is initialized
    if [[ -z "$CCUSAGE_ASYNC_TMPDIR" ]]; then
        ccusage_async_init
    fi
    
    # Cancel any running async job
    ccusage_async_cancel
    
    # Clear all cost mode caches to force fresh fetch
    ccusage_clear_all_cost_caches
    
    # Show progress indicator
    echo "⟳ Fetching active block cost..."
    echo "⟳ Fetching daily cost..."
    echo "⟳ Fetching monthly cost..."
    echo "⟳ Updating percentage data..."
    
    # Trigger async update immediately
    # This will fetch all modes in parallel
    CCUSAGE_FETCH_ALL_MODES=true ccusage_async_update
    
    # For immediate feedback, also do a sync fetch for display
    local result=$(ccusage_display)
    
    # Force prompt redraw to show updated data immediately
    # zle reset-prompt only works inside ZLE widgets, so we check if we're in one
    if [[ -n "$WIDGET" ]]; then
        zle reset-prompt
    else
        # If not in a ZLE widget, we need to print the result and suggest redraw
        echo ""
        echo "Current usage: $result"
        echo "Press Enter to refresh your prompt with new data."
    fi
    
    echo "✓ All cost modes refreshed successfully"
}

# Register as a ZLE widget for better integration
# This allows the command to refresh the prompt immediately when called
zle -N ccusage-refresh

# Also make it available as a regular command
# This ensures it can be called from command line: $ ccusage-refresh
if [[ "${ZSH_EVAL_CONTEXT}" == "toplevel" && "$0" == *ccusage-refresh* ]]; then
    # Script is being executed directly
    # Source required dependencies
    local script_dir="${0:A:h}"
    local plugin_dir="${script_dir:h}"
    
    # Source dependencies if not already loaded
    if ! command -v ccusage_cache_clear &> /dev/null; then
        source "${plugin_dir}/lib/cache.zsh"
    fi
    if ! command -v ccusage_async_cancel &> /dev/null; then
        source "${plugin_dir}/lib/async.zsh"
        ccusage_async_init
    fi
    if ! command -v ccusage_display &> /dev/null; then
        source "${plugin_dir}/zsh-ccusage.plugin.zsh"
    fi
    
    # Execute the refresh
    ccusage-refresh
fi